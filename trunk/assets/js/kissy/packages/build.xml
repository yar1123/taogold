<project name="packages.build" default="build" basedir=".">
    <description>Component Build File</description>

    <property name="copyright.files" value="*-min.css, *-min.js"/>
    <dirname property="current.dir" file="${ant.file.packages.build}"/>

    <import file="${current.dir}/../../tools/build.xml"/>

    <property name="component.name" value="packages"/>
    <property name="component.files" value="*.css, *.js"/>

    <property name="nodejs.patch.file" location="${kissy.dir}/tools/nodejs-patch/patch.js"/>

    <tstamp>
        <format property="timestamp.isoformat"
                pattern="yyyyMMddHHmmss" locale="en"/>
    </tstamp>

    <target name="pre-clean">
        <delete>
            <fileset dir="." includes="${component.files}"/>
        </delete>
    </target>

    <target name="concat">

        <!-- using module compiler to gen core.js -->
        <delete file="${current.dir}/core-pkg.js"/>

        <!--
            不使用 java -jar fork 的话，新开 jvm 和后面的 concat 不串行了
        -->
        <java classname="com.taobao.f2e.Main">
            <arg value="-requires"/>
            <arg value="core"/>
            <arg value="-baseUrls"/>
            <arg value="${kissy.src.dir}"/>
            <arg value="-encodings"/>
            <arg value="utf-8"/>
            <arg value="-outputEncoding"/>
            <arg value="utf-8"/>
            <arg value="-output"/>
            <arg value="${current.dir}/core-pkg.js"/>
            <classpath>
                <pathelement location="${kissy-tools.dir}/module-compiler/module-compiler.jar"/>
                <pathelement path="${java.class.path}"/>
            </classpath>
        </java>

        <!--
            use core 直接放入 core.js 中 ??
            有的应用会先载入 seed.js，再载入 core.js ，希望能立刻用到 core 的东西
        -->
        <concat destfile="${current.dir}/core_tmp.js" encoding="${charset}" outputencoding="${charset}">
            <path path="${current.dir}/core-pkg.js"/>
            <footer filtering="no" trimleading="yes">
                KISSY.use('core');
            </footer>
        </concat>

        <delete file="${current.dir}/core-pkg.js"/>
        <move tofile="${current.dir}/core-pkg.js" file="${current.dir}/core_tmp.js"/>


        <!-- kissy: seed + core, 独立单文件 -->
        <concat destfile="kissy-pkg.js" encoding="${charset}" outputencoding="${charset}">
            <path path="../seed.js"/>
            <path path="${current.dir}/core-pkg.js"/>
            <!--
            <footer filtering="no" trimleading="yes">
                KISSY.use('core');
            </footer>
            -->
        </concat>
        <!-- kissy-aio: 所有文件 -->
        <concat destfile="kissy-aio-pkg.js" encoding="${charset}" outputencoding="${charset}">
            <path path="kissy-pkg.js"/>
            <path path="../sizzle.js"/>

            <path path="../datalazyload.js"/>
            <path path="../template.js"/>
            <path path="../flash.js"/>
            <path path="../dd.js"/>
            <path path="../resizable.js"/>
            <path path="../uibase.js"/>
            <path path="../component.js"/>
            <path path="../switchable.js"/>
            <path path="../overlay.js"/>
            <path path="../suggest.js"/>
            <path path="../imagezoom.js"/>
            <path path="../calendar.js"/>
            <path path="../menu.js"/>
            <path path="../button.js"/>
            <path path="../menubutton.js"/>
        </concat>
    </target>

    <target name="clean">

        <replaceregexp match="@DEBUG@"
                       replace=""
                       flags="g"
                       byline="true"
                       encoding="${charset}">
            <fileset dir="${current.dir}"
                     includes="*-min.js"/>
        </replaceregexp>

        <replaceregexp match="@TIMESTAMP@"
                       replace="${timestamp.isoformat}"
                       flags="g"
                       byline="true"
                       encoding="${charset}">
            <fileset dir="${current.dir}"
                     includes="*.js"/>
        </replaceregexp>

        <!--保持原有文件-->
        <copy todir="${current.dir}/../">
            <fileset dir="${current.dir}" includes="*.js"/>
            <regexpmapper from="(.+)-pkg(.+)" to="\1\2"/>
        </copy>

    </target>

    <!--
    apply nodejs patch to kissy.js
    -->
    <target name="nodejs-patch">
        <concat destfile="${current.dir}/kissy-nodejs-pkg.js" encoding="${charset}" outputencoding="${charset}">
            <path location="${nodejs.patch.file}"/>
            <path location="${current.dir}/kissy-pkg.js"/>
        </concat>
    </target>

    <target name="build"
            depends="pre-clean,concat,nodejs-patch,compress,native2ascii,copyright,clean">
    </target>
</project>
